{{- with .Values.global }}
  {{- if eq (kindOf .externalSecrets) "slice" }}
    {{- range $index, $externalSecret := .externalSecrets }}
      {{- if $externalSecret.enabled }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $.Values.global.app_name }}-{{ $externalSecret.name }}
  namespace: ms-{{ $.Values.global.app_name }}
  labels:
    namespace: ms-{{ $.Values.global.app_name }}
    bu: {{ $.Values.global.bu }}
    backstage.io/kubernetes-id: ms-{{ $.Values.global.app_name }}
    release: {{ $.Release.Name }}
    releaseNumber: {{ $.Values.global.releaseNumber | quote }}
    managed-by: "harness"
spec:
  refreshInterval: {{ $externalSecret.refreshInterval | default "5m" }}
  secretStoreRef:
    name: envs-secretstore-{{ $externalSecret.name }}
    kind: SecretStore
  target:
        {{- if eq ($externalSecret.name) "default" }}
    # pure saudosism
    name: envs
        {{- else }}
    # necessary as two externalSecrets can't rule a sigle secret
    name: envs-{{ $externalSecret.name }}
        {{- end }}
        {{- if eq ($externalSecret.type | default "aws") "vault" }}
  dataFrom:
          {{- range $externalSecret.dataFrom }}
    - extract:
        key: {{ .secretFile }}
          {{- end }}
        {{- else }}
  dataFrom:
    - extract:
        key: ms-{{ $.Values.global.app_name }}/envs
        {{- end }}
      {{- end }} 
    {{- end }} 
  {{- end }} 
{{- end }} 