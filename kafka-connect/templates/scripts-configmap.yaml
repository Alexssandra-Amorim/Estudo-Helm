apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-connect-scripts
  labels:
    app: {{ template "cp-kafka-connect.name" . }}
    chart: {{ template "cp-kafka-connect.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  restart-failed-tasks.sh: |+
    #!/bin/sh
    # https://rmoff.net/2019/06/06/automatically-restarting-failed-kafka-connect-tasks/
    export KAFKA_CONNECT="http://{{ template "cp-kafka-connect.fullname" . }}:{{ .Values.servicePort}}"

    # Restart any connector tasks that are FAILED
    # Works for Apache Kafka >= 2.3.0
    #  multiple tasks in a connector
    curl -s "${KAFKA_CONNECT}/connectors?expand=status" | \
            jq -c -M 'map({name: .status.name } +  {tasks: .status.tasks}) | .[] | {task: ((.tasks[]) + {name: .name})}  | select(.task.state=="FAILED") | {name: .task.name, task_id: .task.id|tostring} | ("/connectors/"+ .name + "/tasks/" + .task_id + "/restart")' | \
            tr -d \" | xargs -I {connector_and_task} curl -v -X POST "${KAFKA_CONNECT}"\{connector_and_task\}

    # List current connectors and status
    curl -s "${KAFKA_CONNECT}/connectors?expand=info&expand=status" | \
            jq '. | to_entries[] | [ .value.info.type, .key, .value.status.connector.state,.value.status.tasks[].state,.value.info.config."connector.class"]|join(":|:")' | \
            column -s : -t| sed 's/\"//g'| sort
